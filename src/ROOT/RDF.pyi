
from typing import Self, overload
import numpy
import pandas as pnd

class RResultPtr:
    def GetValue(self) -> int: ...

class RCutFlowReport:
    def Print(self) -> None: ...

class RSnapshotOptions:
    def __init__(self) -> None:
        self.fMode : str

class RNode:
    def Define(self, name: str, definition: str) -> Self: ...
    def Redefine(self, name: str, definition: str) -> Self: ...
    def Count(self) -> RResultPtr: ...
    def GetColumnNames(self) -> list[str]: ...
    def Range(self, end : int, begin : int = 0) -> 'RNode': ...
    def Report(self) -> RCutFlowReport: ...
    # ------------------
    @overload
    def Snapshot(self, treename : str, filename : str) -> RNode: ...
    @overload
    def Snapshot(self, treename : str, filename : str, columns : list[str]) -> RNode: ...
    @overload
    def Snapshot(self, treename : str, filename : str, columns : list[str], options : RSnapshotOptions) -> RNode: ...
    # ------------------
    @overload
    def Filter(self, expression : str) -> 'RNode': ...
    @overload
    def Filter(self, expression : str, name : str) -> 'RNode': ...
    # ------------------
    def AsNumpy(self, columns : list[str] = []) -> dict[str, numpy.ndarray]: ...

class Experimental:
    @staticmethod
    def FromSpec(jsonFile : str) -> RNode: ...

def FromNumpy(data : dict[str,numpy.ndarray]) -> RNode: ...
def FromPandas(df : pnd.DataFrame) -> RNode: ...
